 From 172.10.113.83:16954 At Tue Aug  2 21:15:37 2022 | sj >
ssss
_________________________________________________________
 From 172.10.113.89:28380 At Tue Aug  2 21:20:13 2022 | gf >
fsa
_________________________________________________________
 From 172.10.113.118:3413 At Tue Aug  2 21:25:50 2022 | password >
123
_________________________________________________________
 From 172.10.113.150:14276 At Tue Aug  2 21:26:29 2022 | olber >
ttty 
_________________________________________________________
 From 172.10.113.118:3413 At Tue Aug  2 21:26:42 2022 | password >
123
_________________________________________________________
 From 172.10.113.118:3424 At Tue Aug  2 21:27:02 2022 | password >
j
_________________________________________________________
 From 172.10.113.118:3424 At Tue Aug  2 21:27:03 2022 | password >
f
_________________________________________________________
 From 172.10.113.150:14276 At Tue Aug  2 21:27:27 2022 | olber >
\
_________________________________________________________
 From 172.10.113.150:14276 At Tue Aug  2 21:27:40 2022 | olber >

_________________________________________________________
 From 172.10.113.83:16954 At Tue Aug  2 21:28:19 2022 | sj >
python .\webchat.py -t 172.10.113.83 -p 2334
_________________________________________________________
 From 172.10.113.83:16954 At Tue Aug  2 21:29:18 2022 | sj >
连接特定的 DNS 后缀: 
_________________________________________________________
 From 172.10.113.83:17070 At Tue Aug  2 21:30:38 2022 | sj >
IPv4 地址: 172.10.113.83
_________________________________________________________
 From 172.10.113.118:3789 At Tue Aug  2 21:33:09 2022 | pass >
123
_________________________________________________________
 From 172.10.113.83:17070 At Tue Aug  2 21:33:20 2022 | sj >
233333333333333333333333333333333333333333
_________________________________________________________
 From 172.10.113.89:28818 At Tue Aug  2 21:33:35 2022 | 123 >
1
_________________________________________________________
 From 172.10.113.118:3789 At Tue Aug  2 21:33:40 2022 | pass >
456
_________________________________________________________
 From 172.10.113.147:10344 At Tue Aug  2 21:34:05 2022 | LGF >
123
_________________________________________________________
 From 172.10.113.147:10344 At Tue Aug  2 21:34:15 2022 | LGF >
WOSHILIGUIFENG
_________________________________________________________
 From 172.10.113.118:3789 At Tue Aug  2 21:34:33 2022 | pass >
woshiguofei
_________________________________________________________
 From 172.10.113.147:10344 At Tue Aug  2 21:36:26 2022 | LGF >
e6 88 91 e6 98 af e6 9d 8e e6 a1 82 e9 94 8b
_________________________________________________________
 From 172.10.113.118:3789 At Tue Aug  2 21:38:51 2022 | pass >
发
_________________________________________________________
 From 172.10.113.118:3789 At Tue Aug  2 21:39:06 2022 | pass >
flag_is_here
_________________________________________________________
 From 172.10.113.147:10344 At Tue Aug  2 21:39:08 2022 | LGF >
李桂锋
_________________________________________________________
 From 172.10.113.118:3789 At Tue Aug  2 21:39:22 2022 | pass >
我是郭飞
_________________________________________________________
 From 172.10.113.150:14309 At Tue Aug  2 21:44:04 2022 | olber' >
C:\Users\Administrator\Desktop\WindowsTerminal
_________________________________________________________
 From 172.10.113.150:14309 At Tue Aug  2 21:45:40 2022 | olber' >
123
_________________________________________________________
 From 172.10.113.150:15474 At Tue Aug  2 21:47:01 2022 | olber >
123
_________________________________________________________
 From 172.10.113.150:15474 At Tue Aug  2 21:47:05 2022 | olber >

_________________________________________________________
 From 172.10.113.83:17070 At Tue Aug  2 21:47:11 2022 | sj >
2
_________________________________________________________
 From 172.10.113.150:15474 At Tue Aug  2 21:47:14 2022 | olber >
中
_________________________________________________________
 From 172.10.113.150:15474 At Tue Aug  2 21:47:46 2022 | olber >
fldfk
_________________________________________________________
 From 172.10.113.150:15474 At Tue Aug  2 21:48:16 2022 | olber >

_________________________________________________________
 From 172.10.113.118:4077 At Tue Aug  2 21:48:23 2022 | pass >
pass
_________________________________________________________
 From 172.10.113.150:15474 At Tue Aug  2 21:48:45 2022 | olber >
jar 隐写
_________________________________________________________
 From 172.10.113.118:4077 At Tue Aug  2 21:49:02 2022 | pass >
余
_________________________________________________________
 From 172.10.113.89:2485 At Tue Aug  2 21:49:33 2022 |  >
123
_________________________________________________________
 From 172.10.113.83:17600 At Tue Aug  2 22:12:20 2022 | sj >
sdfsdf
_________________________________________________________
 From 172.10.113.83:17600 At Tue Aug  2 22:12:48 2022 | sj >
flag{123123}
_________________________________________________________
 From 172.10.113.147:2170 At Tue Aug  2 22:16:02 2022 | LGF >
123456
_________________________________________________________
 From 172.10.113.147:2170 At Tue Aug  2 22:16:11 2022 | LGF >
python .\webchat.py -t 172.10.113.83 -p 2334
_________________________________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:12 2022 | LGF >
import socket
_________________________________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:12 2022 | LGF >
import sys
_________________________________________________________ | LGF >
import time
_________________________________________________________ | LGF >
import getopt
_________________________________________________________ | LGF >
import os
_________________________________________________________ | LGF >
from threading import Thread
_________________________________________________________ | LGF >
"""
_________________________________________________________ | LGF >
修改自https://blog.csdn.net/songling515010475/article/details/106426124
_________________________________________________________ | LGF >
主要有以下改进：
_________________________________________________________ | LGF >
- 有消息记录
_________________________________________________________ | LGF >
- 支持多个客户端
_________________________________________________________ | LGF >
- 客户端随意登出而服务端不Crash
_____________________________________
 ____________________ | LGF >
"""
___________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:12 2022______________________________________ | LGF >
class WebChat:
_________________________________________________________ | LGF >
    username=""
_________________________________________________________ | LGF >
    server_handles=[]
_________________________________________________________ | LGF >
    addrs=[]
_________________________________________________________ | LGF >
    que=[]
_________________________________________________________ | LGF >
    server=""
_________________________________________________________ | LGF >
    realname=True # 实名制
_________________________________________________________ | LGF >
    f=""
_________________________________________________________ | LGF >
    online=[]
_________________________________________________________ | LGF >
    #输出帮助信息
_________________________________________________________ | LGF >
    def usage(self):
_________________________________________________________ | LGF >
        pr
 int("help info : python webChat.py -h")
____________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022_____________________________________________ | LGF >
        print("client : python webChat.py -t [target] -p [port]")
_________________________________________________________ | LGF >
        print("server : python webChat.py -lp [port]")
_________________________________________________________ | LGF >
        sys.exit()
_________________________________________________________ | LGF >
 
_________________________________________________________ | LGF >
    #聊天客户端
_________________________________________________________ | LGF >
    def webChatClient(self, target, port):
_________________________________________________________ | LGF >
        #创建socket套接字
_________________________________________________________ | LGF >
        client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
_________________________________________________________ | LGF >
        #连接服务器
_________________________________________________________ | L
 GF >
        client.connect((target, port))
________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022_________________________________________________ | LGF >
        print("[*] try to connect the target......")
_________________________________________________________ | LGF >
        #接收服务器发过来的信息
_________________________________________________________ | LGF >
        response = client.recv(1024)
_________________________________________________________ | LGF >
        print(response.decode())
_________________________________________________________ | LGF >
        self.username=input("请输入用户名(不可有空格)>")
_________________________________________________________ | LGF >
        self.f=open("LogOf"+self.username+".txt",mode="a")
_________________________________________________________ | LGF >
        os.system("start python webChat.py -s "+"LogOf"+self.username+".txt")
_________________________________________________________ | LGF >
        print("现在你可以输入消息了，按Enter发送")
________________
 _________________________________________ | LGF >
  
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022      #创建发送消息的线程
_________________________________________________________ | LGF >
        t = Thread(target=self.uploadData, args=(client,))
_________________________________________________________ | LGF >
        #指定当前主线程结束时退出子进程
_________________________________________________________ | LGF >
        t.setDaemon(True)
_________________________________________________________ | LGF >
        #启动线程
_________________________________________________________ | LGF >
        t.start()
_________________________________________________________ | LGF >
 
_________________________________________________________ | LGF >
        # 创建接收消息的线程
_________________________________________________________ | LGF >
        c = Thread(target=self.downloadData, args=("",client,))
_________________________________________________________ | LGF >
        c.setDaemon(True)
_________________________________
 ________________________ | LGF >
        c.start()
_
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022________________________________________________________ | LGF >
        try:
_________________________________________________________ | LGF >
            while True:
_________________________________________________________ | LGF >
                time.sleep(10000)
_________________________________________________________ | LGF >
        #KeyboardInterrupt用来接收Ctrl+c,当接收到命令时就会捕获，并退出
_________________________________________________________ | LGF >
        except KeyboardInterrupt:
_________________________________________________________ | LGF >
            sys.exit()
_________________________________________________________ | LGF >
    #聊天服务端
_________________________________________________________ | LGF >
    def webChatServer(self, port):
_________________________________________________________ | LGF >
        self.f=open("serverlog.txt",mode="a")
_________________________________________________________ 
 | LGF >
        self.server = socket.socket(socket.A
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022F_INET, socket.SOCK_STREAM)
_________________________________________________________ | LGF >
        self.server.bind(("0.0.0.0",port))
_________________________________________________________ | LGF >
        self.server.listen(255)
_________________________________________________________ | LGF >
        # 不断连接
_________________________________________________________ | LGF >
        l=Thread(target=self.acceptclients,args=())
_________________________________________________________ | LGF >
        l.setDaemon(True)
_________________________________________________________ | LGF >
        l.start()
_________________________________________________________ | LGF >
        # 创建发送消息的线程
_________________________________________________________ | LGF >
        t = Thread(target=self.sendData, args=())
_________________________________________________________ | LGF >
        # 指定当前主线程结束时退出子进程
____________
 _____________________________________________ | LGF 
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022>
        t.setDaemon(True)
_________________________________________________________ | LGF >
        # 启动线程
_________________________________________________________ | LGF >
        t.start()
_________________________________________________________ | LGF >
        try:
_________________________________________________________ | LGF >
            time.sleep(10000)
_________________________________________________________ | LGF >
        # KeyboardInterrupt用来接收Ctrl+c,当接收到命令时就会捕获，并退出
_________________________________________________________ | LGF >
        except KeyboardInterrupt:
_________________________________________________________ | LGF >
            sys.exit()
_________________________________________________________ | LGF >
    #不断连接
_________________________________________________________ | LGF >
    def acceptclients(self):
_________________________________________________________ | LGF >
    
     while True:
____________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022_____________________ | LGF >
            print("[*] Listening on 0.0.0.0:%d"%port)
_________________________________________________________ | LGF >
            server_handle, addr = self.server.accept()
_________________________________________________________ | LGF >
            print("[*] Accept connection from %s:%d"%(addr[0], addr[1]))
_________________________________________________________ | LGF >
            server_handle.send(b"[*] connection successful...")
_________________________________________________________ | LGF >
            self.server_handles.append(server_handle)
_________________________________________________________ | LGF >
            self.addrs.append(addr)
_________________________________________________________ | LGF >
            self.online.append(1)
_________________________________________________________ | LGF >
            # 创建接收消息的线程
_________________________________________________________ | LGF >
  
           cx = Thread(target=self.recvaData, args=(s
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022elf.server_handles[-1],self.addrs[-1],len(self.addrs)-1))
_________________________________________________________ | LGF >
            cx.setDaemon(True)
_________________________________________________________ | LGF >
            cx.start()
_________________________________________________________ | LGF >
    #服务端发送数据涵数
_________________________________________________________ | LGF >
    def sendData(self):
_________________________________________________________ | LGF >
        while True:
_________________________________________________________ | LGF >
            if len(self.que):
_________________________________________________________ | LGF >
                data = self.que[0]
_________________________________________________________ | LGF >
                data = data.encode('utf-8')
_________________________________________________________ | LGF >
                for i in range(len(self.server_handles)):
______________________
 ___________________________________ | LGF >
        
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022            if self.online[i]:
_________________________________________________________ | LGF >
                        self.server_handles[i].send(data)
_________________________________________________________ | LGF >
                self.que=self.que[1:]
_________________________________________________________ | LGF >
 
_________________________________________________________ | LGF >
    #服务端接收数据涵数   
_________________________________________________________ | LGF >
    def recvaData(self,socket,addr,it):
_________________________________________________________ | LGF >
        while True:
_________________________________________________________ | LGF >
            try:
_________________________________________________________ | LGF >
                response=socket.recv(1024)
_________________________________________________________ | LGF >
            except ConnectionResetError:
____________________________________________________
 _____ | LGF >
                self.online[it]=0
____
 From 172.10.113.147:2239 At Tue Aug  2 22:17:13 2022_____________________________________________________ | LGF >
                return 0
_________________________________________________________ | LGF >
            print("Message received:",response)
_________________________________________________________ | LGF >
            print("Message received:",response,file=self.f)
_________________________________________________________ | LGF >
            self.f.close()
_________________________________________________________ | LGF >
            self.f=open("serverlog.txt",mode="a")
_________________________________________________________ | LGF >
            if response:
_________________________________________________________ | LGF >
                response = response.decode()
_________________________________________________________ | LGF >
                response="At "+time.asctime( time.localtime(time.time()) )+response
_________________________________________________________ | LGF >
                if
  self.realname:
____________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:14 2022_____________________ | LGF >
                    response="From "+str(addr[0])+":"+str(addr[1])+" "+response
_________________________________________________________ | LGF >
                self.que.append(response)
_________________________________________________________ | LGF >
                
_________________________________________________________ | LGF >
    #客户端发送数据涵数
_________________________________________________________ | LGF >
    def uploadData(self, socket):
_________________________________________________________ | LGF >
        while True:
_________________________________________________________ | LGF >
            data = input(">>> ")
_________________________________________________________ | LGF >
            if data == "@reshow":
_________________________________________________________ | LGF >
                os.system("start python webChat.py -s "+"LogOf"+self.username+".txt")
___________________________________
 ______________________ | LGF >
            else:
___
 From 172.10.113.147:2239 At Tue Aug  2 22:17:14 2022______________________________________________________ | LGF >
                data = (" | "+self.username+" >\n"+data+"\n"+57*"_").encode('utf-8')
_________________________________________________________ | LGF >
                socket.send(data)
_________________________________________________________ | LGF >
 
_________________________________________________________ | LGF >
    #客户端接收数据涵数
_________________________________________________________ | LGF >
    def downloadData(self,name, socket):
_________________________________________________________ | LGF >
        while True:
_________________________________________________________ | LGF >
            response = socket.recv(1024)
_________________________________________________________ | LGF >
            if response:
_________________________________________________________ | LGF >
                response = response.decode()
_______________________________________________________
 __ | LGF >
                print(name,response,file=
 From 172.10.113.147:2239 At Tue Aug  2 22:17:14 2022self.f)
_________________________________________________________ | LGF >
                self.f.close()
_________________________________________________________ | LGF >
                self.f=open("LogOf"+self.username+".txt",mode="a")
_________________________________________________________ | LGF >
 
_________________________________________________________ | LGF >
if __name__ == "__main__":
_________________________________________________________ | LGF >
    target = ""
_________________________________________________________ | LGF >
    port = 0
_________________________________________________________ | LGF >
    listen = False
_________________________________________________________ | LGF >
    help = False
_________________________________________________________ | LGF >
    opts, args = getopt.getopt(sys.argv[1:], "t:p:lh:s") #利用getopt模块获取从命令行中的参数
_________________________________________________________ | LGF >
    f
 or o,a in opts:
____________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:14 2022_____________________ | LGF >
        if o == "-t":
_________________________________________________________ | LGF >
            target = a
_________________________________________________________ | LGF >
        elif o == "-p":
_________________________________________________________ | LGF >
            port = int(a)
_________________________________________________________ | LGF >
        elif o == "-l":
_________________________________________________________ | LGF >
            listen = True
_________________________________________________________ | LGF >
        elif o == "-h":
_________________________________________________________ | LGF >
            help == True
_________________________________________________________ | LGF >
        elif o=="-s":
_________________________________________________________ | LGF >
            os.system("title "+sys.argv[2][5:-4])
_________________________________________________________ | LGF >
            lu=0
 
___________________________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:14 2022______ | LGF >
            while True:
_________________________________________________________ | LGF >
                while True:
_________________________________________________________ | LGF >
                    time.sleep(0.1)
_________________________________________________________ | LGF >
                    x=os.path.getmtime(sys.argv[2])
_________________________________________________________ | LGF >
                    if x>lu:
_________________________________________________________ | LGF >
                        lu=x
_________________________________________________________ | LGF >
                        break
_________________________________________________________ | LGF >
                os.system("cls")
_________________________________________________________ | LGF >
                os.system("type "+sys.argv[2])
_________________________________________________________ | LGF >
        else:
_________________________________________
 ________________ | LGF >
            assert False, "
 From 172.10.113.147:2239 At Tue Aug  2 22:17:14 2022Unhandled Option"
_________________________________________________________ | LGF >
    test = WebChat()
_________________________________________________________ | LGF >
    if help:#输出帮助信息
_________________________________________________________ | LGF >
        test.usage()
_________________________________________________________ | LGF >
    elif listen:#调用服务器
_________________________________________________________ | LGF >
        test.webChatServer(port)
_________________________________________________________ | LGF >
    else:#调用客户端
_________________________________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:17 2022 | LGF >
        test.webChatClient(target, port)
_________________________________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:54 2022 | LGF >
>>>         elif o=="-s":
_________________________________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:54 2022 | LGF >
>>>             os.system("title "+sys.argv[2][5:-4])
_________________________________________________________ | LGF >
>>>             lu=0
_________________________________________________________ | LGF >
>>>             while True:
_________________________________________________________ | LGF >
>>>                 while True:
_________________________________________________________ | LGF >
>>>                     time.sleep(0.1)
_________________________________________________________ | LGF >
>>>                     x=os.path.getmtime(sys.argv[2])
_________________________________________________________ | LGF >
>>>                     if x>lu:
_________________________________________________________ | LGF >
>>>                         lu=x
_________________________________________________________ | LGF >
>>>                         break
_________________________________________________________ | LGF >
>>>                 os.system("cls")
_
 ____________________________________________________
 From 172.10.113.147:2239 At Tue Aug  2 22:17:54 2022____
 From 172.10.113.147:2239 At Tue Aug  2 22:17:55 2022 | LGF >
>>>                 os.system("type "+sys.argv[2])
_________________________________________________________
